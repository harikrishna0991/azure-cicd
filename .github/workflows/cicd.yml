name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  ACR_NAME: cicdacrend03
  ACR_LOGIN_SERVER: cicdacrend03.azurecr.io
  STAGING_WEBAPP_NAME: my-app-staging-123
  PRODUCTION_WEBAPP_NAME: my-app-prod-123  # replace if needed
  RESOURCE_GROUP: rg-cicd

jobs:

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          pytest

  build-and-push:
    name: Build and Push Docker Image to ACR
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          az acr login --name ${{ env.ACR_NAME }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }} .

      - name: Push Docker Image
        run: |
          docker push ${{ env.ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }}

  deploy-staging:
    name: Deploy to Staging
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App (Staging)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.STAGING_WEBAPP_NAME }}
          images: ${{ env.ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }}

  approve-production:
    name: Manual Approval
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://${{ env.PRODUCTION_WEBAPP_NAME }}.azurewebsites.net
    steps:
      - name: Waiting for approval to deploy to production
        run: echo "Waiting for manual approval..."

  deploy-production:
    name: Deploy to Production
    needs: approve-production
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy to Azure Web App (Production)
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.PRODUCTION_WEBAPP_NAME }}
          images: ${{ env.ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }}

  scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Run Trivy Scan
        run: |
          trivy image ${{ env.ACR_LOGIN_SERVER }}/flask-app:${{ github.sha }} || echo "Scan completed with warnings"

